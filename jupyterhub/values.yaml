# Configuration reference
# https://z2jh.jupyter.org/en/stable/resources/reference.html#helm-chart-configuration-reference
# https://github.com/jupyterhub/zero-to-jupyterhub-k8s/blob/main/jupyterhub/values.yaml

ingress:
  enabled: true
  annotations:
    cert-manager.io/cluster-issuer: letsencryptcertmanager
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
  hosts:
    - jupyter.crobasaurusrex.ryanbeales.com
  tls:
    - secretName: jupyter-crobasaurusrex-ryanbeales-com-tls
      hosts:
        - jupyter.crobasaurusrex.ryanbeales.com

# Disable prepuller (I have exactly 3 nodes, and I can wait and not waste disk space)
prePuller:
  hook:
    enabled: false
  continuous:
    enabled: false

# Enabled me as an admin user, but passwordless access to every account.
hub:
  config:
    Authenticator:
      admin_users:
        - ryanbeales
      allowed_users:
        - ryanbeales
        - ryanbeales2
    JupyterHub:
      admin_access: true

singleuser:
  networkPolicy:
    enabled: false # disable network policy
  # List of available prebuilt images is here:
  # https://jupyter-docker-stacks.readthedocs.io/en/latest/using/selecting.html
  # Options for KubeSpawner (which is what launches these profiles) is here:
  # https://jupyterhub-kubespawner.readthedocs.io/en/latest/spawner.html
  profileList:
    - display_name: "CPU only server - default image (no sudo)"
      description: "Spawns a notebook server"
    - display_name: "GPU Server - jupyter base image - sudo enabled - crobceratops (3060)"
      description: "Spawns a notebook server with access to a GPU and based on the jupyter base image - crobceratops"
      kubespawner_override:
        allow_privilege_escalation: true # Note the form of this name does not match the kubernetes config name.
        environment:
          GRANT_SUDO: "yes" # allow sudo in this image
        uid: 0 # run the start script as root to grant sudo to the user in the image
        image: quay.io/jupyter/base-notebook:lab-4.4.3
        extra_resource_limits:
          nvidia.com/gpu: "1"
        node_selector: 
          # This one has a 3060 in it, everything else is a 10xx series.
          kubernetes.io/hostname: crobceratops
        extra_pod_config:
          runtimeClassName: nvidia 
    - display_name: "GPU Server - jupyter base image - sudo enabled - crobputer (4090)"
      description: "Spawns a notebook server with access to a GPU and based on the jupyter base image"
      kubespawner_override:
        allow_privilege_escalation: true # Note the form of this name does not match the kubernetes config name.
        environment:
          GRANT_SUDO: "yes" # allow sudo in this image
        uid: 0 # run the start script as root to grant sudo to the user in the image
        image: quay.io/jupyter/base-notebook:lab-4.4.3
        extra_resource_limits:
          nvidia.com/gpu: "1"
        node_selector: 
          # This one has a 4090 in it, everything else is a 10xx series.
          kubernetes.io/hostname: crobputer
        extra_pod_config:
          runtimeClassName: nvidia 
  storage:
    dynamic:
      storageClass: auto-local-storage-zfs # store on k3s node for now.
    capacity: 2Gi