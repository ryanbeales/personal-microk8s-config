apiVersion: apps/v1
kind: Deployment
metadata:
  name: coredns
  labels:
    k8s-app: kube-dns
    app.kubernetes.io/name: coredns-internal-dns
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: coredns-internal-dns
  template:
    metadata:
      labels:
        app.kubernetes.io/name: coredns-internal-dns
    spec:
      hostNetwork: true # We need to bind to port 53, otherwise we're limited to the nodeport range which is in the 30000's. And my clients don't like that.
      containers:
      - name: coredns
        # https://hub.docker.com/r/coredns/coredns/tags
        image: coredns/coredns:1.12.2
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            memory: 170Mi
          requests:
            cpu: 100m
            memory: 70Mi
        args: [ "-conf", "/etc/coredns/Corefile" ]
        volumeMounts:
        - name: config-volume
          mountPath: /etc/coredns
          readOnly: true
        - name: coredns-config
          mountPath: /coredns-config
          readOnly: true
        ports:
        - containerPort: 53
          name: dns
          protocol: UDP
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - all
          readOnlyRootFilesystem: true
      dnsPolicy: Default
      volumes:
        - name: config-volume
          configMap:
            name: coredns-config
            items:
            - key: Corefile
              path: Corefile
        - name: coredns-config
          persistentVolumeClaim:
            claimName: internal-dns-pvc