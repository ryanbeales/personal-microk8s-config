# This should create:
# Single pod gitea deployment
# 1 gitea actions runner per node in the cluster (can restrict with nodeselectors/taints), deployed automagically

namespace: gitea

ingress:
  enabled: true
  annotations:
    cert-manager.io/cluster-issuer: letsencryptcertmanager
  hosts:
    - host: gitea.crobasaurusrex.ryanbeales.com
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: gitea-crobasaurusrex-ryanbeales-com-tls
      hosts:
        - gitea.crobasaurusrex.ryanbeales.com

deployment:
  nodeSelector: crobasaurusrex # Deploy on crobasaurusrex as it has more disk space.

persistance:
  enabled: true
  claimName: gitea-pvc


# Provision gitea-actions statefulset, we should end up with 2 runners.
actions:
  enabled: true
  provisioning:
    enabled: true
  extraVolumes:
    # Create an empty volume to share the docker socker between the act-runner and the dind container
    - name: docker-socket
      emptyDir: {}
  statefulset:
    actRunner:
      tag: 0.2.11-dind-rootless
      extraVolumeMounts:
        - name: docker-socket
          mountPath: /var/run/user/1000/
      # By default, the helm chart does not populate the labels section of the runner config.
      # This means all jobs start in a bare image without the necessary tools.
      config: |
        log:
          level: debug
        cache:
          enabled: false
        runner:
          labels:
            - "ubuntu-latest:docker://gitea/runner-images:ubuntu-latest"
            - "ubuntu-22.04:docker://gitea/runner-images:ubuntu-22.04"
            - "ubuntu-20.04:docker://gitea/runner-images:ubuntu-20.04"
        container:
          options: "--add-host=gitea.crobasaurusrex.ryanbeales.com:10.0.0.59"
          docker_host: "unix:///var/run/user/1000/docker.sock" # Sets the DOCKER_HOST for both act_runner and containers it launches with dind
    dind:
      tag: 25.0.2-dind-rootless
      extraVolumeMounts:
        - name: docker-socket
          mountPath: /var/run/user/1000/

# Single pod configuration, disable HA options for Redis and Postgres
redis-cluster:
  enabled: false
redis:
  enabled: true
postgresql:
  enabled: true
postgresql-ha:
  enabled: false

gitea:
  admin:
    existingSecret: gitea-admin-secret
  config:
    database:
      DB_TYPE: postgres
    indexer:
      ISSUE_INDEXER_TYPE: bleve
      REPO_INDEXER_ENABLED: true